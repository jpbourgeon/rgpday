type Scenario @model {
  id: ID!
  description: String
  searchable: String
  sessions: [Session] @connection(name: "ScenarioSessions")
}

type Presentation @model {
  id: ID!
  description: String
  searchable: String
  sessions: [Session] @connection(name: "PresentationSessions")
}

type Session @model {
  id: ID!
  description: String
  contact: String
  numberOfParticipants: Int
  startDate: AWSDate
  endDate: AWSDate
  gameOver: Boolean
  searchable: String
  scenario: Scenario! @connection(name: "ScenarioSessions")
  presentation: Presentation! @connection(name: "PresentationSessions")
  teams: [Team] @connection(name: "SessionTeams")
}

type Team @model {
  # the id is a hash string of the JSON stringification of
  # the session id and team name key value pairs to make 
  # the name unique for a particular session
  id:ID!
  name: String!
  initials: String
  searchable: String
  numberOfInterviews: Int
  serviceBeingInterviewed: String
  session: Session! @connection(name: "SessionTeams")
  quizzes: [Quiz] @connection(name: "TeamQuizzes")
}

type Quiz @model {
  # the id is a hash string of the JSON stringification of
  # the team id and service name key value pairs to make 
  # the name unique for a particular Team
  id:ID!
  service: String!
  answers: AWSJSON!
  numberOfJokers: Int!
  team: Team! @connection(name: "TeamQuizzes")
}

type Config @model {
  id: ID!
  value: AWSJSON
}

type Query {
  sendMail(
    sender: String
    content: String
    subject: String
    recaptcha: String
  ): AWSJSON
}